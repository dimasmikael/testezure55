name: $(Date:yyyyMMdd)$(Rev:r)
trigger:
  branches: 
    include:
      - master
      - feature/*
variables:
  scheme: ''
  sdk: 'iphoneos'
  configuration: 'Release'
  projectDirectory: weather_rx_stream_sink
  ipaApkName: weather_rx_stream_sink

stages:
- stage: Build
  displayName: Build
  jobs: 
  - job: Build
    displayName: Build job
    pool:
      vmImage: 'macOS-latest'
    steps:    
    - task: InstallAppleCertificate@2
      displayName: 'Install a DevApple certificate'
      inputs:
        certSecureFile: xyz Dist certificate.p12
        certPwd: Xyzlabs@12
    - task: InstallAppleProvisioningProfile@1
      displayName: 'Install a prov certificate'
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: 'CICD_Test_app_Dist_profile.mobileprovision'
    - task: FlutterInstall@0
      displayName: 'Install flutter'
      inputs:
        channel: 'stable'
        version: 'latest'       

    - task: FlutterBuild@0
      displayName: 'Flutter Build ios'
      inputs:
        target: 'ios'
        projectDirectory: $(projectDirectory)
        buildName: '$(Build.BuildNumber)'
        iosCodesign: false
    - task: FlutterTest@0
      displayName: 'Flutter Test'
      inputs:
        projectDirectory: $(projectDirectory)        
    - task: Xcode@5
      displayName: 'Export ipa'
      inputs:
        actions: 'archive'     
        scheme: 'Runner'
        packageApp: true
        configuration: 'release'    
        workingDirectory: $(projectDirectory)/ios
        exportOptions: 'auto'
        exportMethod: 'ad-hoc'
        exportTeamId: '3wpyCD6465'
        provisioningProfileUuid: $(APPLE_PROV_PROFILE_UUID)
        signingOption: 'manual'
        signingIdentity: $(APPLE_CERTIFICATE_SIGNING_IDENTITY)
        archivePath: $(projectDirectory)/ios/build/Runner.xcarchive
        exportPath: $(projectDirectory)/ios/build
        teamId: '3wpyCD6465'
        xcWorkspacePath: $(projectDirectory)/ios/Runner.xcworkspace
        args: '-verbose'        
    - task: CopyFiles@2
      inputs:
        contents: '**/*.ipa'
        targetFolder: '$(build.artifactStagingDirectory)'
        overWrite: true
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'drop' 
    - task: AppCenterDistribute@3
      displayName: 'Distribute ipa on app center'
      inputs:
        serverEndpoint: 'token1iOS'
        appSlug: 'your slug name'
        appFile: '$(build.artifactStagingDirectory)/$(ipaApkName)/ios/build/$(ipaApkName).ipa'
        releaseNotesOption: 'input'
        releaseNotesInput: 'New version'
        destinationType: 'groups'    
    - task: FlutterBuild@0
      displayName: 'Flutter Build android'
      inputs:
        target: 'apk'
        projectDirectory: $(projectDirectory)
        buildName: '$(Build.BuildNumber)'
    - task: AndroidSigning@3
      displayName: 'Signing and aligning APK file(s) **/*.apk'
      inputs:
        apkFiles: '**/*.apk'
        apksign: true
        apksignerKeystoreFile: 'appcenterdemo.keystore'
        apksignerKeystorePassword: 'L@......'
        apksignerKeystoreAlias: 'alokUpadhyay'
        apksignerKeyPassword: 'L@......'           
    
    - task: CopyFiles@2
      inputs:
        contents: '**/*.apk'
        targetFolder: '$(build.artifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'drop'
    - task: AppCenterDistribute@3
      displayName: 'Distribute android on app center'
      inputs:
        serverEndpoint: 'token1'
        appSlug: 'slugname'
        appFile: '$(ipaApkName)/build/app/outputs/apk/release/app-release.apk'
        releaseNotesOption: 'input'
        releaseNotesInput: 'New version'
        destinationType: 'groups'